{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ChelbyRhoades/Desktop/toto/toto/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from \"./HomeScreen\";\nimport FriendsScreen from \"./FriendsScreen\";\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      location: null\n    };\n\n    _this.findCoordinates = function () {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var location = JSON.stringify(position);\n\n        _this.setState({\n          location: location\n        });\n      }, function (error) {\n        return Alert.alert(error.message);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Friends\",\n        component: FriendsScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default App;","map":{"version":3,"sources":["/Users/ChelbyRhoades/Desktop/toto/toto/App.js"],"names":["React","NavigationContainer","createStackNavigator","HomeScreen","FriendsScreen","Stack","App","state","location","findCoordinates","navigator","geolocation","getCurrentPosition","position","JSON","stringify","setState","error","Alert","alert","message","enableHighAccuracy","timeout","maximumAge","Component","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAGA,IAAMC,KAAK,GAAGH,oBAAoB,EAAlC;;IAEMI,G;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACRC,MAAAA,QAAQ,EAAE;AADF,K;;UAITC,e,GAAkB,YAAM;AACvBC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACC,UAAAC,QAAQ,EAAI;AACX,YAAML,QAAQ,GAAGM,IAAI,CAACC,SAAL,CAAeF,QAAf,CAAjB;;AAEA,cAAKG,QAAL,CAAc;AAAER,UAAAA,QAAQ,EAARA;AAAF,SAAd;AACA,OALF,EAMC,UAAAS,KAAK;AAAA,eAAIC,KAAK,CAACC,KAAN,CAAYF,KAAK,CAACG,OAAlB,CAAJ;AAAA,OANN,EAOC;AAAEC,QAAAA,kBAAkB,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,KAArC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OAPD;AASA,K;;;;;;;WACA,kBAAS;AACP,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD,CAAO,MAAP;AACI,QAAA,IAAI,EAAC,MADT;AAGI,QAAA,SAAS,EAAEpB,UAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAME,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,SAAS,EAAEC,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CADF;AAiBD;;;;EAlCeJ,KAAK,CAACwB,S;;AAqCxB,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf;AASA,eAAe1B,GAAf","sourcesContent":["\nimport React from 'react';\nimport { Alert, StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from './HomeScreen';\nimport FriendsScreen from './FriendsScreen';\n\n\nconst Stack = createStackNavigator();\n\nclass App extends React.Component {\n  state = {\n\t\tlocation: null\n\t};\n\n\tfindCoordinates = () => {\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\tposition => {\n\t\t\t\tconst location = JSON.stringify(position);\n\n\t\t\t\tthis.setState({ location });\n\t\t\t},\n\t\t\terror => Alert.alert(error.message),\n\t\t\t{ enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\n\t\t);\n\t};\n  render() {\n    return (\n      <NavigationContainer>\n        <Stack.Navigator>\n        <Stack.Screen\n            name=\"Home\"\n            \n            component={HomeScreen}\n          />\n          <Stack.Screen\n            name=\"Friends\"\n            component={FriendsScreen}\n          />\n           \n        </Stack.Navigator>\n      </NavigationContainer>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}